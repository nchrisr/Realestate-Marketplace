// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let Verifier = artifacts.require("Verifier");

// - use the contents from proof-1.json generated from zokrates steps
let proof = require('../../proofs/proof-1.json');

contract('TestVerifier', accounts =>{

    const account_one = accounts[0];

    describe("Test verification proof", function (){
        beforeEach(async function() {
            this.contract = await Verifier.new({from: account_one});
        });

        // Test verification with correct proof
        it('Should verify with correct proof', async function () {
            let result = await this.contract.verifyTxUsable.call(proof.proof.a,
                proof.proof.b,
                proof.proof.c,
                proof.inputs);

            assert.equal(result, true, "Proof is correct.");
        });

        // Test verification with incorrect proof
        it('Should fail with incorrect proof', async function () {
            let incorrectProofInputs = [10, 2]
            let result = await this.contract.verifyTxUsable.call(proof.proof.a,
                proof.proof.b,
                proof.proof.c,
                incorrectProofInputs,
                { from: account_one }
            );

            assert.equal(result, false, "The proof is not correct");
        });

    });
})
